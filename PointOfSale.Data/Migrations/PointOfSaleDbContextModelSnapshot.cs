// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PointOfSale.Data.Entities;

namespace PointOfSale.Data.Migrations
{
    [DbContext(typeof(PointOfSaleDbContext))]
    partial class PointOfSaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 4000,
                            Count = 2,
                            Name = "Pila"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 700,
                            Count = 5,
                            Name = "Vrata"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 150,
                            Count = 12,
                            Name = "Kutija"
                        },
                        new
                        {
                            Id = 4,
                            Cost = 200,
                            Count = 43,
                            Name = "Lampa"
                        },
                        new
                        {
                            Id = 5,
                            Cost = 30,
                            Count = 54,
                            Name = "Karte"
                        },
                        new
                        {
                            Id = 6,
                            Cost = 2000,
                            Count = 30,
                            Name = "Kamera-Nikon D350 DSLR"
                        },
                        new
                        {
                            Id = 7,
                            Cost = 1500,
                            Count = 7,
                            Name = "Monitor-LG 27000"
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Elektrotehnika"
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.CategoryOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OfferId");

                    b.ToTable("CategoryOffers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            OfferId = 4
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            OfferId = 6
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            OfferId = 7
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            OfferId = 8
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            OfferId = 9
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            OfferId = 12
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            OfferId = 13
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Lease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DailyRates")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DailyRates = 100,
                            IsActive = false,
                            Name = "Kombi-BMW"
                        },
                        new
                        {
                            Id = 2,
                            DailyRates = 50,
                            IsActive = false,
                            Name = "PC"
                        },
                        new
                        {
                            Id = 3,
                            DailyRates = 30,
                            IsActive = false,
                            Name = "PlayStation 4"
                        },
                        new
                        {
                            Id = 4,
                            DailyRates = 70,
                            IsActive = false,
                            Name = "Motor-Piaggio"
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("CountSold")
                        .HasColumnType("int");

                    b.Property<int?>("LeaseId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId")
                        .IsUnique()
                        .HasFilter("[ArticleId] IS NOT NULL");

                    b.HasIndex("LeaseId")
                        .IsUnique()
                        .HasFilter("[LeaseId] IS NOT NULL");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId")
                        .IsUnique()
                        .HasFilter("[ServiceId] IS NOT NULL");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            CountSold = 1
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 2,
                            CountSold = 0
                        },
                        new
                        {
                            Id = 3,
                            ArticleId = 3,
                            CountSold = 0
                        },
                        new
                        {
                            Id = 4,
                            ArticleId = 4,
                            CountSold = 0
                        },
                        new
                        {
                            Id = 5,
                            ArticleId = 5,
                            CountSold = 0
                        },
                        new
                        {
                            Id = 6,
                            ArticleId = 6,
                            CountSold = 0
                        },
                        new
                        {
                            Id = 7,
                            ArticleId = 7,
                            CountSold = 0
                        },
                        new
                        {
                            Id = 8,
                            CountSold = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 9,
                            CountSold = 0,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 10,
                            CountSold = 0,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 11,
                            CountSold = 0,
                            LeaseId = 1
                        },
                        new
                        {
                            Id = 12,
                            CountSold = 0,
                            LeaseId = 2
                        },
                        new
                        {
                            Id = 13,
                            CountSold = 0,
                            LeaseId = 3
                        },
                        new
                        {
                            Id = 14,
                            CountSold = 0,
                            LeaseId = 4
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.OneOffBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<int>("Profit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OneOffBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfIssue = new DateTime(2020, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 400
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FullProfit")
                        .HasColumnType("int");

                    b.Property<int?>("OneOffBillId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceBillId")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionBillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OneOffBillId")
                        .IsUnique()
                        .HasFilter("[OneOffBillId] IS NOT NULL");

                    b.HasIndex("ServiceBillId")
                        .IsUnique()
                        .HasFilter("[ServiceBillId] IS NOT NULL");

                    b.HasIndex("SubscriptionBillId")
                        .IsUnique()
                        .HasFilter("[SubscriptionBillId] IS NOT NULL");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullProfit = 440,
                            OneOffBillId = 1,
                            ServiceBillId = 1
                        },
                        new
                        {
                            Id = 2,
                            FullProfit = 200,
                            SubscriptionBillId = 1
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HourlyRates")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfWorkersNeeded")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HourlyRates = 20,
                            Name = "Instalacija interneta",
                            NumberOfWorkersNeeded = 1
                        },
                        new
                        {
                            Id = 2,
                            HourlyRates = 30,
                            Name = "Instalacija klime",
                            NumberOfWorkersNeeded = 2
                        },
                        new
                        {
                            Id = 3,
                            HourlyRates = 40,
                            Name = "Bojanje zida",
                            NumberOfWorkersNeeded = 1
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ServiceBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Profit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Profit = 40
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuyerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerOib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Profit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyerFirstName = "Niko",
                            BuyerLastName = "Nikić",
                            BuyerOib = "31232543",
                            Profit = 200
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DailyWorkHours")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DailyWorkHours = 8,
                            FirstName = "Mate",
                            IsAvailable = true,
                            LastName = "Matić",
                            Oib = "3123131231"
                        },
                        new
                        {
                            Id = 2,
                            DailyWorkHours = 8,
                            FirstName = "Šime",
                            IsAvailable = true,
                            LastName = "Šimić",
                            Oib = "4324232"
                        },
                        new
                        {
                            Id = 3,
                            DailyWorkHours = 8,
                            FirstName = "Ivan",
                            IsAvailable = true,
                            LastName = "Ivanović",
                            Oib = "543645454"
                        },
                        new
                        {
                            Id = 4,
                            DailyWorkHours = 8,
                            FirstName = "Toni",
                            IsAvailable = true,
                            LastName = "Toničević",
                            Oib = "65436345"
                        },
                        new
                        {
                            Id = 5,
                            DailyWorkHours = 8,
                            FirstName = "Mate",
                            IsAvailable = true,
                            LastName = "Matić",
                            Oib = "3123131231"
                        },
                        new
                        {
                            Id = 6,
                            DailyWorkHours = 8,
                            FirstName = "Ana",
                            IsAvailable = false,
                            LastName = "Anić",
                            Oib = "4564635465",
                            ServiceId = 1
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.CategoryOffer", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Category", "Category")
                        .WithMany("CategoryOffers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("CategoryOffers")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Offer", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Article", "Article")
                        .WithOne("Offer")
                        .HasForeignKey("PointOfSale.Data.Entities.Models.Offer", "ArticleId");

                    b.HasOne("PointOfSale.Data.Entities.Models.Lease", "Lease")
                        .WithOne("Offer")
                        .HasForeignKey("PointOfSale.Data.Entities.Models.Offer", "LeaseId");

                    b.HasOne("PointOfSale.Data.Entities.Models.Order", "Order")
                        .WithMany("Offers")
                        .HasForeignKey("OrderId");

                    b.HasOne("PointOfSale.Data.Entities.Models.Service", "Service")
                        .WithOne("Offer")
                        .HasForeignKey("PointOfSale.Data.Entities.Models.Offer", "ServiceId");

                    b.Navigation("Article");

                    b.Navigation("Lease");

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Order", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.OneOffBill", "OneOffBill")
                        .WithOne("Order")
                        .HasForeignKey("PointOfSale.Data.Entities.Models.Order", "OneOffBillId");

                    b.HasOne("PointOfSale.Data.Entities.Models.ServiceBill", "ServiceBill")
                        .WithOne("Order")
                        .HasForeignKey("PointOfSale.Data.Entities.Models.Order", "ServiceBillId");

                    b.HasOne("PointOfSale.Data.Entities.Models.SubscriptionBill", "SubscriptionBill")
                        .WithOne("Order")
                        .HasForeignKey("PointOfSale.Data.Entities.Models.Order", "SubscriptionBillId");

                    b.Navigation("OneOffBill");

                    b.Navigation("ServiceBill");

                    b.Navigation("SubscriptionBill");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Worker", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Service", "Service")
                        .WithMany("Workers")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Article", b =>
                {
                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Category", b =>
                {
                    b.Navigation("CategoryOffers");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Lease", b =>
                {
                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Offer", b =>
                {
                    b.Navigation("CategoryOffers");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.OneOffBill", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Order", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Service", b =>
                {
                    b.Navigation("Offer");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ServiceBill", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
